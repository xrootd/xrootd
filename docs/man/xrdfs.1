.TH xrdfs 1 "__VERSION__"
.SH NAME
xrdfs - xrootd file and directory meta-data utility
.SH SYNOPSIS
.nf

\fBxrdfs\fR \fI[--no-cwd]\fR \fIhost[:port]\fR \fI[command [args]]\fR

\fBcommand\fR: help, chmod, ls, locate, mkdir, mv, stat, statvfs, query, rm, rmdir,
           truncate, prepare, cat, tail, spaceinfo
.fi
.br
.ad l
.SH DESCRIPTION
The \fBxrdfs\fR utility executes meta-data oriented operations
(e.g., ls, mv, rm, etc.) on one or more xrootd servers.
Command help is available by invoking \fBxrdfs\fR with no command
line options or parameters and then typing "help" in response to the
input prompt.

.SH OPTIONS
\fB--no-cwd\fR
.RS 3
No CWD is being preset in interactive mode.

.SH COMMANDS
\fBchmod\fR \fIpath\fR \fI<user><group><other>\fR
.RS 3
Modify permissions of the \fIpath\fR. Permission string example:
\fIrwxr-x--x\fR

.RE
\fBls\fR \fI[-l]\fR \fI[-u]\fR \fI[-R]\fR \fI[-D]\fR \fI[-Z]\fR \fI[-C]\fR \fI[dirname]\fR
.RS 3
Get directory listing.
.br
\fI-l\fR stat every entry and pring long listing
.br
\fI-u\fR print paths as URLs
.br
\fI-R\fR list subdirectories recursively
.br
\fI-D\fR show duplicate entries
.br
\fI-Z\fR check if file is a ZIP archive and if yes list its content
.br
\fI-C\fR checksum every entry

.RE
\fBlocate\fR \fI[-n]\fR \fI[-r]\fR \fI[-d]\fR \fI[-m]\fR \fI[-i]\fR \fI[-p]\fR \fI<path>\fR
.RS 3
Get the locations of the path.
.br
\fI-r\fR refresh, don't use cached locations
.br
\fI-n\fR make the server return the response immediately even though it may be incomplete
.br
\fI-d\fR do a recursive, deep locate in order to find data servers
.br
\fI-m\fR prefer host names to IP addresses
.br
\fI-i\fR ignore network dependencies (IPv6/IPv4)
.br
\fI-p\fR be passive: ignore tried/triedrc cgi opaque info


.RE
\fBmkdir\fR \fI[-p] [-m<user><group><other>] <dirname>\fR
.RS 3
Creates a directory/tree of directories.
.br
\fI-p\fR create the entire directory tree recursively
.br
\fI-m\fR\fB<user><group><other>\fR permissions for newly created directories

.RE
\fBmv\fR \fI<path1> <path2>\fR
.RS 3
Move path1 to path2 locally on the same server.

.RE
\fBstat\fR \fI<path>\fR
.RS 3
Get info about the file or directory.
.br
\fI-q\fR \fB<flags>\fR Makes
xrdfs return error code 55 to the shell if the
requested flag combination is not present;
flags may be combined together using '|' or '&'
.br
Available flags:
\fBXBitSet\fR, \fBIsDir\fR, \fBOther\fR, \fBOffline\fR, \fBPOSCPending\fR,
\fBIsReadable\fR, \fBIsWriteable\fR, \fBBackUpExists\fR

.RE
\fBstatvfs\fR \fI<path>\fR
.RS 3
Get info about a virtual file system.

.RE
\fBquery\fR \fI<code> <params>\fR
.RS 3
Obtain server information. Query codes:
.br
\fIconfig\fR         \fB<what>\fR   Server configuration; <what> is one of the following:
.RS 5
bind_max      - the maximum number of parallel streams
.br
chksum        - the supported checksum
.br
pio_max       - maximum number of parallel I/O requests
.br
readv_ior_max - maximum size of a readv element
.br
readv_iov_max - maximum number of readv entries
.br
tpc           - support for third party copies
.br
wan_port      - the port to use for wan copies
.br
wan_window    - the wan_port window size
.br
window        - the tcp window size
.br
cms           - the status of the cmsd
.br
role          - the role in a cluster
.br
sitename      - the site name
.br
version       - the version of the server
.br
.RE
\fIchecksumcancel\fR \fB<path>\fR   File checksum cancellation
.br
\fIchecksum\fR       \fB<path>\fR   File checksum
.br
\fIopaque\fR         \fB<arg>\fR    Implementation dependent
.br
\fIopaquefile\fR     \fB<arg>\fR    Implementation dependent
.br
\fIspace\fR          \fB<space>\fR  Logical space stats
.br
\fIstats\fR          \fB<what>\fR   Server stats; <what> is a list of letters
indicating information to be returned:
.RS 5
a - all statistics
.br
p - protocol statistics
.br
b - buffer usage statistics
.br
s - scheduling statistics
.br
d - device polling statistics
.br
u - usage statistics
.br
i - server identification
.br
z - synchronized statistics
.br
l - connection statistics
.br
.RE
\fIxattr\fR          \fB<path>\fR   Extended attributes
.br
\fIprepare\fR        \fB<reqid> [filenames]\fR  Prepare request status


.RE
\fBrm\fR \fI<filename>\fR
.RS 3
Remove a file.

.RE
\fBrmdir\fR \fI<dirname>\fR
.RS 3
Remove a directory.

.RE
\fBtruncate\fR \fI<filename> <length>\fR
.RS 3
Truncate a file.

.RE
\fBprepare\fR \fI[-c]\fR \fI[-f]\fR \fI[-s]\fR \fI[-w]\fR \fI[-e]\fR \fI[-p priority]\fR \fI[-a requestid]\fR \fIfilenames\fR
.RS 3
Prepare one or more files for access.
.br
\fI-c\fR co-locate staged files if possible
.br
\fI-f\fR refresh file access time even if the location is known
.br
\fI-s\fR stage the files to disk if they are not online
.br
\fI-w\fR when files will be accessed for modification
.br
\fI-p\fR priority of the request, 0 (lowest) - 3 (highest)
.br
\fI-a\fR abort the request
.br
\fI-e\fR evict the file from disk cache

.RE
\fBcat\fR \fI[-o localfile]\fR \fIfiles\fR
.RS 3
Print contents of one or mote files to stdout
.br
\fI-o\fR print to the specified local file

.RE
\fBtail\fR \fI[-c bytes] [-f]\fR \fIfile\fR
.RS 3
Output last part of files to stdout.
.br
\fI-c\fR num_bytes out last num_bytes
.br
\fI-f\fR           output appended data as file grows

.RE
\fBspaceinfo\fR \fIpath\fR
.RS 3
Get space statistics for given path.

.RE
\fBxattr\fR \fI<path> <code> <params>\fR
.RS 3
Operation on extended attributes. Codes:
.br
\fIset\fR         \fB<attr>\fR   Set extended attribute; 
                     <attr> is string of form name=value
.br
\fIget\fR         \fB<name>\fR   Get extended attribute.
.br
\fIdel\fR         \fB<name>\fR   Delete extended attribute.
.br
\fIlist\fR                 List extended attributes.

.SH RETURN CODES
.RE
\fB50\fR  : generic error (e.g. config, internal, data, OS)

\fB51\fR  : socket related error

\fB52\fR  : postmaster related error

\fB53\fR  : XRootD related error

\fB54\fR  : redirection error

\fB55\fR  : query response was negative (this is not an error)

.SH NOTES
For the list of available environment variables please refere to xrdcopy(1)

.SH DIAGNOSTICS
Errors yield an error message and a non-zero exit status.

.SH LICENSE
LGPL

.SH SUPPORT LEVEL
The \fBxrdfs\fR command is supported by the XRootD Collaboration.
Contact information can be found at

.ce
http://xrootd.org/contact.html
