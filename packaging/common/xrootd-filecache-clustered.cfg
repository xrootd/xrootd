###########################################################################
# This is a very simple sample configuration file sufficient to start an  #
# xrootd file caching data server using the default port 1094 and its     #
# companion cmsd. Trying to use the xrootd will cause the client to       #
# simply wait there is no redirector and this configuration file is       #
# insufficient to start one. Consult the reference manuals on how to      #
# create a usable configuration file to completely describe a functional  #
# xrootd cluster.                                                         #
#                                                                         #
# On start-up the xrootd will complain about not connecting to the pipe   #
# named '/var/spool/xrootd/.olb/olbd.admin'. This will continue until the #
# cmsd starts. When the cmsd start is will say ' Waiting for primary      #
# server to login.' Once xrootd is started and connects to the cmsd, the  #
# cmsd will complain 'Unable to connect socket to localhost' because      #
# there is no redirector. However, this shows that xrootd and cmsd have   #
# been correctly installed.                                               #
#                                                                         #
# Note: You should always create a *single* configuration file and use it #
# when starting each daemon that you need to run in the cluster!          #
###########################################################################
# Tell everyone who the manager is
#
all.manager redirector:1213

# The redirector and all cmsd’s export /data red-only with the stage option. The stage
# option requests that if the file isn’t found in the cluster the redirector should send
# the client to a PFC server with enough space to cache the file.
#
all.export /data stage r/o

# Configuration is different for the redirector, the server cmsd, and
# for the server xrootd. We break those out in the if-else-fi clauses.
#
if redirector

all.role manager

# Export with stage option - if the file isn’t found in the cluster the
# redirector sends the client to a PFC server with enough free space.
#

all.export /data stage r/o

# Server’s cmsd configuration – all PFC’s are virtual data servers
#

else if exec cmsd

all.role server

# Export with stage option - this tells manager cmsd we can pull files from the origin
#
all.export /data stage r/o

# The cmsd uses the standard oss plug-in to locate files in the cache.
# oss.localroot directive should be the same as for the server.
#

oss.localroot /pfc-cache

# Server’s xrootd configuration – all PFC’s are virtual data servers
#
else

all.role server

# For xrootd, load the proxy plugin and the disk caching plugin.
#
ofs.osslib   libXrdPss.so
pss.cachelib libFileCache.so

# The server needs to write to disk, stage not relevant
#
all.export /data rw


# Tell the proxy where the data is coming from (arbitrary).
#
pss.origin someserver.domain.org:1094

# Tell the PFC’s where the disk cache resides (arbitrary).
#
oss.localroot /pfc-cache

# Tell the PFC’s available RAM
#
pfc.ram 100g

fi

# More configuration files can be added in /etc/xrootd/config.d/                                                                                                             
# For example /etc/xrootd/config.d/10-mygrid.cfg and                                                                                                                       
# /etc/xrootd/config.d/98-mysite-specifics.cfg                                                                                                                             
#                                                                                                                                                                           
continue /etc/xrootd/config.d/